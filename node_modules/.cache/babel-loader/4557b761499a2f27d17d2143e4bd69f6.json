{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\Dashboard\\\\createPost\\\\Dropzone.js\";\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { makeStyles, Box } from '@material-ui/core';\nconst useStyles = makeStyles((theme, opacity) => ({\n  root: {\n    height: \"20vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: \"red\",\n    backgroundColor: \"#1b2a63\",\n    backgroundImage: \"url(ps-neutral.png)\",\n    borderRadius: \"25px\",\n    position: \"relative\"\n  },\n  innerBox: {\n    position: \"absolute\",\n    backgroundColor: \"#0c192e\",\n    borderRadius: \"25px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"98%\",\n    height: \"89%\",\n    color: \"white\"\n  },\n  onMouseOver: opacity => {\n    return {\n      opacity: opacity ? \"20%\" : \"50%\"\n    };\n  }\n}));\nexport default function Dropzone(props) {\n  const [opacity, setOpacity] = useState(false);\n  const classes = useStyles(opacity);\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          props.setPreviewImages(prevImages => prevImages.concat(reader.result));\n          props.setImages(prevImages => prevImages.concat(file));\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  }, [props]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: `${classes.innerBox} ${classes.onMouseOver}`,\n    onMouseOver: setOpacity(true),\n    onMouseLeave: setOpacity(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Drop Your Images\")));\n}","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/Dashboard/createPost/Dropzone.js"],"names":["React","useCallback","useState","useDropzone","makeStyles","Box","useStyles","theme","opacity","root","height","display","justifyContent","alignItems","border","backgroundColor","backgroundImage","borderRadius","position","innerBox","width","color","onMouseOver","Dropzone","props","setOpacity","classes","onDrop","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","readyState","setPreviewImages","prevImages","concat","result","setImages","readAsDataURL","getRootProps","getInputProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme, opacity) => ({\r\n    root: {\r\n        height: \"20vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        border: \"red\",\r\n        backgroundColor: \"#1b2a63\",\r\n        backgroundImage: \"url(ps-neutral.png)\",\r\n        borderRadius: \"25px\",\r\n        position: \"relative\"\r\n    },\r\n    innerBox:  {\r\n        position: \"absolute\",\r\n        backgroundColor: \"#0c192e\",\r\n        borderRadius: \"25px\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"98%\",\r\n        height: \"89%\",\r\n        color: \"white\",            \r\n},\r\n    onMouseOver: opacity => {\r\n        return {\r\n            opacity: opacity ? \"20%\" : \"50%\"\r\n            \r\n            }\r\n        }\r\n\r\n}));\r\n\r\nexport default function Dropzone(props) {\r\n    const [opacity, setOpacity] = useState(false)\r\n    const classes = useStyles(opacity);\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        acceptedFiles.forEach((file) => {\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log('file reading was aborted')\r\n            reader.onerror = () => console.log('file reading has failed')\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    props.setPreviewImages(prevImages => prevImages.concat(reader.result))\r\n                    props.setImages(prevImages => prevImages.concat(file))\r\n                }\r\n\r\n            }\r\n            reader.readAsDataURL(file)\r\n        })\r\n\r\n    }, [props])\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <Box className={classes.root}>\r\n                <Box \r\n                    className={`${classes.innerBox} ${classes.onMouseOver}`}\r\n                onMouseOver={setOpacity(true)}\r\n                onMouseLeave={setOpacity(false)}\r\n                >\r\n                    Drop Your Images\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}