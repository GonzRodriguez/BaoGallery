{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\Dashboard\\\\createPost.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Container from '@material-ui/core/Container';\nimport { ApiContext } from \"../../context/ApiContext\";\nimport { UserContext } from \"../../context/UserContext\"; // import FileBase from 'react-file-base64'\n// import Axios from \"axios\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  fileUpload: {\n    border: \"1px solid #ccc\",\n    borderRadius: \"50px\",\n    display: \"inline-block\",\n    padding: \"8px 10px\",\n    cursor: \"pointer\"\n  },\n  img: {\n    borderRadius: \"8px\",\n    maxWidth: \"40vh\",\n    cursor: \"pointer\"\n  },\n  margin: {\n    margin: theme.spacing(2)\n  },\n  filebase: {\n    display: \"none\"\n  }\n}));\nexport default function UploadImage(props) {\n  // const [image, setImage] = useState({ preview0: \"\", raw0: \"\", });\n  const [images, setImages] = useState([]); // preview1: \"\", raw1: \"\", preview2: \"\", raw2: \"\", preview3: \"\", raw3: \"\",\n\n  const user = useContext(UserContext);\n  const api = useContext(ApiContext);\n  const classes = useStyles();\n  const base64Images = [];\n\n  const handleChange = e => {\n    const reader = new FileReader();\n    const files = e.target.files;\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files.item(i);\n      base64Images.push(file);\n    }\n\n    base64Images.forEach(image => {\n      reader.onload = () => {\n        try {\n          if (reader.readyState === 2) {\n            setImages(reader.result);\n            console.log(reader.result);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        try {\n          reader.readAsDataURL(image);\n        } catch (error) {\n          console.log();\n        }\n      };\n    }); // handleUpload();\n  };\n\n  const {\n    username,\n    _id\n  } = user.data;\n\n  const handleUpload = async e => {}; //     // api.createPost(post)\n  //   await Axios.post(`http://localhost:3000/api/upload-image/${username}/${_id}`, { author: username })\n  //   .then(\n  //   await Axios({\n  //         method: \"POST\",\n  //         url: `http://localhost:3000/api/upload-image/${_id}`,\n  //         withCredentials: \"same-origin\",\n  //         data: imageFormData,\n  //         headers: {\n  //             \"Accept\": \"multipart/form-data\",\n  //             \"Content-Type\": \"application/x-www-form-urlencoded\",\n  //         },\n  //         })\n  //         .then(function (response) {\n  //             console.log(response.data);\n  //         })\n  //     )\n  //   } \n  // function FileBase64(){\n  //   base64Images.map(image => <img src={image} alt=\"post\" className={classes.img} /> )\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    m: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"uploadImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-image-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: classes.fileUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 48\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"upload-image-button\",\n    name: \"uploadImage\",\n    multiple: true,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/Dashboard/createPost.jsx"],"names":["React","useState","useContext","makeStyles","AddIcon","Container","ApiContext","UserContext","useStyles","theme","root","display","alignItems","fileUpload","border","borderRadius","padding","cursor","img","maxWidth","margin","spacing","filebase","UploadImage","props","images","setImages","user","api","classes","base64Images","handleChange","e","reader","FileReader","files","target","i","length","file","item","push","forEach","image","onload","readyState","result","console","log","error","readAsDataURL","username","_id","data","handleUpload"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Container from '@material-ui/core/Container';\r\nimport { ApiContext } from \"../../context/ApiContext\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n// import FileBase from 'react-file-base64'\r\n// import Axios from \"axios\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    fileUpload : {  \r\n      border: \"1px solid #ccc\",\r\n      borderRadius: \"50px\",\r\n      display: \"inline-block\",\r\n      padding: \"8px 10px\",\r\n      cursor: \"pointer\",\r\n    },\r\n    img: {\r\n      borderRadius: \"8px\",\r\n      maxWidth: \"40vh\",\r\n      cursor: \"pointer\",\r\n    },\r\n    margin: {\r\n    margin: theme.spacing(2),\r\n    },\r\n    filebase: {\r\n      display: \"none\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function UploadImage(props) {\r\n  // const [image, setImage] = useState({ preview0: \"\", raw0: \"\", });\r\n  const [images, setImages] = useState([]);\r\n  // preview1: \"\", raw1: \"\", preview2: \"\", raw2: \"\", preview3: \"\", raw3: \"\",\r\n  const user = useContext(UserContext)\r\n  const api = useContext(ApiContext)\r\n\r\n    const classes = useStyles();\r\n    const base64Images = []\r\n  const handleChange = e => {\r\n\r\n    const reader = new FileReader();\r\n    const files = e.target.files\r\n    for (let i = 0; i < files.length; i++) {\r\n      const file = files.item(i); \r\n      base64Images.push(file)\r\n    }\r\n    base64Images.forEach(image => {\r\n\r\n      reader.onload = () => {\r\n        try {\r\n          if (reader.readyState === 2) {\r\n            setImages(reader.result)\r\n            console.log(reader.result);\r\n          }\r\n          \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n        try {\r\n          \r\n          reader.readAsDataURL(image)\r\n        } catch (error) {\r\n          console.log();\r\n        }\r\n      };\r\n\r\n    })\r\n    // handleUpload();\r\n}\r\n  const {username, _id} = user.data\r\n\r\n  const handleUpload = async e => {\r\n      }\r\n\r\n  //     // api.createPost(post)\r\n  //   await Axios.post(`http://localhost:3000/api/upload-image/${username}/${_id}`, { author: username })\r\n  //   .then(\r\n  //   await Axios({\r\n  //         method: \"POST\",\r\n  //         url: `http://localhost:3000/api/upload-image/${_id}`,\r\n  //         withCredentials: \"same-origin\",\r\n  //         data: imageFormData,\r\n  //         headers: {\r\n  //             \"Accept\": \"multipart/form-data\",\r\n  //             \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  //         },\r\n  //         })\r\n  //         .then(function (response) {\r\n  //             console.log(response.data);\r\n  //         })\r\n  //     )\r\n  //   } \r\n\r\n      // function FileBase64(){\r\n      //   base64Images.map(image => <img src={image} alt=\"post\" className={classes.img} /> )\r\n      // }\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n      <Container m=\"true\">\r\n      <form id=\"uploadImage\">\r\n      <label htmlFor=\"upload-image-button\">\r\n            {/* <FileBase64/> */}\r\n            <h5 className={classes.fileUpload}><AddIcon/></h5>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"upload-image-button\"\r\n        name=\"uploadImage\"\r\n        multiple\r\n        style={{ display: \"none\" }}\r\n        onChange={handleChange}\r\n      />\r\n          {/* <FileBase\r\n            type=\"file\"\r\n            multiple={true}\r\n            className={classes.filebase}\r\n            id=\"upload-image-button\"\r\n            name=\"uploadImage\"\r\n            style={{ display: \"none\" }}\r\n            onDone={({ base64 }) => console.log(base64) }\r\n            // setProfileData({...profileData, avatar: base64 })\r\n          /> */}\r\n          {/* <button style={{alignItems: \"center\"}} onClick={handleUpload}>Upload</button> */}\r\n      <br />\r\n      </form>\r\n      </Container>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}