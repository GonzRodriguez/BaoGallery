{"ast":null,"code":"import Axios from \"axios\";\n\nclass Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(cb) {\n    this.authenticated = true;\n    cb();\n  }\n\n  async logout() {\n    const options = {\n      withCredentials: \"same-origin\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Cache\": \"no-cache\"\n      }\n    };\n    await Axios.get(\"http://localhost:3000/api/logout\", options).then(response => {\n      console.log(response); // this.props.history.push(\"/\")\n    }).then(this.authenticated = false);\n  }\n\n  isLoggedIn(cb) {\n    // let authentication = false\n    const options = {\n      withCredentials: \"same-origin\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Cache\": \"no-cache\"\n      }\n    };\n    Axios.get(\"http://localhost:3000/api/isAuth\", options).then(response => {\n      console.log(response.data); //    return response.data.auth\n\n      this.authenticated = response.data; // console.log(authentication);\n    }).then(() => {\n      return this.authenticated;\n    });\n    cb(); // return authentication; \n  }\n\n  isAuthenticated() {\n    this.isLoggedIn(() => {\n      console.log(this.authenticated);\n    });\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/vamoss/src/components/auth.js"],"names":["Axios","Auth","constructor","authenticated","login","cb","logout","options","withCredentials","headers","get","then","response","console","log","isLoggedIn","data","isAuthenticated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AACV,SAAKC,aAAL,GAAqB,KAArB;AACH;;AAEDC,EAAAA,KAAK,CAACC,EAAD,EAAK;AACN,SAAKF,aAAL,GAAqB,IAArB;AACAE,IAAAA,EAAE;AACL;;AAED,QAAMC,MAAN,GAAe;AACX,UAAMC,OAAO,GAAG;AACZC,MAAAA,eAAe,EAAE,aADL;AAEZC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,iBAAS;AAHJ;AAFG,KAAhB;AASA,UAAMT,KAAK,CAACU,GAAN,CAAU,kCAAV,EAA8CH,OAA9C,EAAuDI,IAAvD,CAA6DC,QAAQ,IAAI;AAC3EC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAD2E,CAE3E;AACH,KAHK,EAIDD,IAJC,CAII,KAAKR,aAAL,GAAqB,KAJzB,CAAN;AAKH;;AAEDY,EAAAA,UAAU,CAACV,EAAD,EAAK;AAEX;AACA,UAAME,OAAO,GAAG;AACZC,MAAAA,eAAe,EAAE,aADL;AAEZC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,iBAAS;AAHJ;AAFG,KAAhB;AAQAT,IAAAA,KAAK,CAACU,GAAN,CAAU,kCAAV,EAA8CH,OAA9C,EAESI,IAFT,CAEcC,QAAQ,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACI,IAArB,EAAF,CAClB;;AACI,WAAKb,aAAL,GAAqBS,QAAQ,CAACI,IAA9B,CAFc,CAGd;AACH,KANT,EAQSL,IART,CAQc,MAAM;AAAE,aAAO,KAAKR,aAAZ;AAA2B,KARjD;AAUIE,IAAAA,EAAE,GArBK,CAsBX;AACC;;AAELY,EAAAA,eAAe,GAAG;AACd,SAAKF,UAAL,CAAgB,MAAI;AAACF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,aAAjB;AAAkC,KAAvD;AACH;;AAtDM;;AA0DX,eAAe,IAAIF,IAAJ,EAAf","sourcesContent":["import Axios from \"axios\";\r\n\r\nclass Auth {\r\n    constructor() {\r\n        this.authenticated = false;\r\n    }\r\n\r\n    login(cb) {\r\n        this.authenticated = true;\r\n        cb();\r\n    }\r\n    \r\n    async logout() {\r\n        const options = {\r\n            withCredentials: \"same-origin\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Cache\": \"no-cache\"\r\n            }\r\n        }\r\n\r\n        await Axios.get(\"http://localhost:3000/api/logout\", options).then (response => {\r\n            console.log(response);\r\n            // this.props.history.push(\"/\")\r\n        })\r\n            .then(this.authenticated = false)   \r\n    }\r\n\r\n    isLoggedIn(cb) {\r\n\r\n        // let authentication = false\r\n        const options = {\r\n            withCredentials: \"same-origin\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Cache\": \"no-cache\"\r\n            }\r\n        };\r\n        Axios.get(\"http://localhost:3000/api/isAuth\", options)\r\n        \r\n                .then(response => { console.log(response.data);\r\n                //    return response.data.auth\r\n                    this.authenticated = response.data \r\n                    // console.log(authentication);\r\n                })\r\n                    \r\n                .then(() => { return this.authenticated })\r\n        \r\n            cb()\r\n        // return authentication; \r\n        }\r\n            \r\n    isAuthenticated() {\r\n        this.isLoggedIn(()=>{console.log(this.authenticated); })   \r\n    }\r\n    \r\n}\r\n\r\nexport default new Auth();\r\n"]},"metadata":{},"sourceType":"module"}