{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\ProtectedRoute.js\";\n// import { logDOM } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // import authentication from \"./auth\"\n\nconst ProtectedRoute = ({\n  component: Component,\n  user: User,\n  ...rest\n}) => {\n  const PrivateRoute = () => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => User ? /*#__PURE__*/React.createElement(Component, Object.assign({}, User, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }));\n\n  return props => {\n    /*#__PURE__*/\n    React.createElement(PrivateRoute, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }));\n  };\n};\n\nexport default ProtectedRoute; // <Route\n//     // passed the rest of the props to the route\n//     {...rest}\n//     render={props => {\n//         if (rest.user.auth) {\n// // console.log(\"user object \" + rest.user.user.username);\n//             return <Component user={User} {...props}/>;\n//         } if (!rest.user.auth) {\n//             return (\n//                 <Redirect\n//                     to={{\n//                         pathname: \"/\",\n//                         state: {\n//                             from: props.location\n//                         }\n//                     }}\n//                 />\n//             );\n//         }\n//     }}\n// />","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","user","User","rest","PrivateRoute","props"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,IAAI,EAAEC,IAA9B;AAAoC,KAAGC;AAAvC,CAAD,KAAmD;AAEtE,QAAMC,YAAY,GAAG,mBACjB,oBAAC,KAAD,oBAAWD,IAAX;AAAiB,IAAA,MAAM,EAAE,MACrBD,IAAI,gBAAG,oBAAC,SAAD,oBAAeA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBACJ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AASA,SACIG,KAAK,IAAI;AACL;AAAA,wBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,GAHL;AAKC,CAhBL;;AAkBI,eAAeP,cAAf,C,CAEY;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { logDOM } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import authentication from \"./auth\"\r\n\r\nconst ProtectedRoute = ({ component: Component, user: User, ...rest }) => {\r\n\r\n    const PrivateRoute = () => (\r\n        <Route {...rest} render={() => (\r\n            User ? <Component {...User} /> : \r\n            <Redirect to={\"/\"}\r\n            />\r\n        )} />\r\n    );\r\n    \r\n\r\n    return (\r\n        props => {\r\n            <PrivateRoute {...props}/>\r\n        }\r\n        );\r\n    };\r\n    \r\n    export default ProtectedRoute\r\n    \r\n                // <Route\r\n                //     // passed the rest of the props to the route\r\n                //     {...rest}\r\n                //     render={props => {\r\n                //         if (rest.user.auth) {\r\n                // // console.log(\"user object \" + rest.user.user.username);\r\n                //             return <Component user={User} {...props}/>;\r\n                //         } if (!rest.user.auth) {\r\n                //             return (\r\n                //                 <Redirect\r\n                //                     to={{\r\n                //                         pathname: \"/\",\r\n                //                         state: {\r\n                //                             from: props.location\r\n                //                         }\r\n                //                     }}\r\n                //                 />\r\n                //             );\r\n                //         }\r\n                //     }}\r\n                // />"]},"metadata":{},"sourceType":"module"}