{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\vamoss\\\\src\\\\components\\\\ProtectedRoute.js\";\n// import { logDOM } from \"@testing-library/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // import auth from \"./auth\";\n\nimport Axios from \"axios\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const authentication = async () => {\n    Axios.get(\"http://localhost:3000/api/isAuth\", {\n      withCredentials: true\n    }).then(response => {\n      console.log(response.data);\n\n      if (response.data === true) {\n        setIsAuthenticated(response.data);\n      } //this.authenticated = response.data\n\n    });\n  };\n\n  useEffect(() => {\n    authentication();\n  });\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (isAuthenticated) {\n        console.log(isAuthenticated);\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 28\n          }\n        }));\n      }\n\n      if (isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/vamoss/src/components/ProtectedRoute.js"],"names":["React","useEffect","useState","Route","Redirect","Axios","ProtectedRoute","component","Component","rest","isAuthenticated","setIsAuthenticated","authentication","get","withCredentials","then","response","console","log","data","props","pathname","state","from","location"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAOC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAE3D,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMU,cAAc,GAAG,YAAY;AAC/BP,IAAAA,KAAK,CAACQ,GAAN,CAAU,kCAAV,EAA8C;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAA9C,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,UAAIH,QAAQ,CAACG,IAAT,KAAkB,IAAtB,EAA4B;AACxBR,QAAAA,kBAAkB,CAACK,QAAQ,CAACG,IAAV,CAAlB;AACH,OAJa,CAIb;;AACJ,KAPL;AAQD,GATH;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,cAAc;AACjB,GAFQ,CAAT;AAIA,sBACI,oBAAC,KAAD,oBACQH,IADR;AAEI,IAAA,MAAM,EAAEW,KAAK,IAAI;AACb,UAAIV,eAAJ,EAAqB;AACjBO,QAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ;AACA,4BAAO,oBAAC,SAAD,oBAAeU,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH;;AAAC,UAAIV,eAAJ,EAAqB;AACnB,4BACI,oBAAC,QAAD;AACI,UAAA,EAAE,EAAE;AACAW,YAAAA,QAAQ,EAAE,GADV;AAEAC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADT;AAFP,WADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;AACJ,KAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAsBH,CAzCD;;AA2CA,eAAelB,cAAf","sourcesContent":["// import { logDOM } from \"@testing-library/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import auth from \"./auth\";\r\nimport Axios from \"axios\";\r\n\r\nconst  ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\r\n    const authentication = async () => {\r\n        Axios.get(\"http://localhost:3000/api/isAuth\", { withCredentials: true })\r\n\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (response.data === true) {\r\n                    setIsAuthenticated(response.data)\r\n                }//this.authenticated = response.data\r\n            })\r\n      }\r\n\r\n    useEffect(() => {\r\n        authentication()\r\n    })\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (isAuthenticated) {\r\n                    console.log(isAuthenticated )\r\n                    return <Component {...props} />;\r\n                } if (isAuthenticated) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    from: props.location\r\n                                }\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}