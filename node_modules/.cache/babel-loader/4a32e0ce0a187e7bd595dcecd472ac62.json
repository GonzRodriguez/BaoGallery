{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\Dashboard\\\\EditProfileForm.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { UserContext } from \"../../context/UserContext\";\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { ApiContext } from '../../context/ApiContext';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    margin: \"auto\",\n    maxWidth: \"100vh\",\n    alignItems: 'center',\n    justifyContent: 'center',\n    outline: \"none\",\n    border: 0,\n    overflow: \"scroll\",\n    minHeight: \"20vh\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: 0,\n    // boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  texfield: {\n    width: \"100%\"\n  }\n}));\nexport default function EditProfileForm() {\n  const user = useContext(UserContext);\n  const api = useContext(ApiContext);\n  const {\n    username,\n    email,\n    webpage,\n    socialMediaAccounts\n  } = user.data;\n  const [postData, setPostData] = useState({\n    username: username,\n    email: email,\n    webpage: webpage,\n    facebook: socialMediaAccounts.facebook,\n    instagram: socialMediaAccounts.instagram,\n    twitter: socialMediaAccounts.twitter,\n    snapchat: socialMediaAccounts.snapchat,\n    flickr: socialMediaAccounts.flickr,\n    password: ''\n  });\n  const classes = useStyles(); // const [newPassword, setPassword] = useState();\n\n  const [confirmPassword, setConfirmPassword] = useState();\n  const [passwordTag, setPasswordTag] = useState();\n  const [open, setOpen] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handlePasswordOnSubmit() {\n    confirmPassword !== postData.password ? setPasswordTag(\"error\") : updateProfile();\n  }\n\n  const updateProfile = async () => {\n    let editFormData = new FormData(document.getElementById(\"form\"));\n\n    function convertFD2JSON(formData) {\n      let obj = {};\n\n      for (let key of formData.keys()) {\n        obj[key] = formData.get(key);\n      }\n\n      return JSON.stringify(obj);\n    }\n\n    let jsonData = convertFD2JSON(editFormData);\n    console.log(jsonData);\n    api.tryProfile(editFormData).then(function (response) {\n      console.log(response.data);\n      handleClose();\n    });\n  }; // Nota Mirar el css de Modal\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Edit Your Profile\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.username,\n    onChange: e => setPostData({ ...postData,\n      username: e.target.value\n    }),\n    label: \"Username\",\n    defaultValue: username,\n    name: \"username\",\n    id: \"Username\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.email,\n    onChange: e => setPostData({ ...postData,\n      email: e.target.value\n    }),\n    label: \"Email\",\n    defaultValue: email,\n    name: \"email\",\n    id: \"email\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Contact details\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.webpage,\n    onChange: e => setPostData({ ...postData,\n      webpage: e.target.value\n    }),\n    label: \"Web Page\",\n    defaultValue: webpage,\n    name: \"webpage\",\n    id: \"webPage\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.instagram,\n    onChange: e => setPostData({ ...postData,\n      instagram: e.target.value\n    }),\n    label: \"Instagram\",\n    defaultValue: socialMediaAccounts.instagram && socialMediaAccounts.instagram.account,\n    id: \"Instagram\",\n    name: \"instagram\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.facebook,\n    onChange: e => setPostData({ ...postData,\n      facebook: e.target.value\n    }),\n    label: \"Facebook\",\n    name: \"facebook\",\n    defaultValue: socialMediaAccounts.facebook && socialMediaAccounts.facebook.account,\n    id: \"Facebook\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.twitter,\n    onChange: e => setPostData({ ...postData,\n      twitter: e.target.value\n    }),\n    label: \"Twitter\",\n    name: \"twitter\",\n    defaultValue: socialMediaAccounts.twitter && socialMediaAccounts.twitter.account,\n    id: \"Twitter\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.snapchat,\n    onChange: e => setPostData({ ...postData,\n      snapchat: e.target.value\n    }),\n    label: \"Snapchat\",\n    defaultValue: socialMediaAccounts.snapchat && socialMediaAccounts.snapchat.account,\n    name: \"snapchat\",\n    id: \"Snapchat\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.flickr,\n    onChange: e => setPostData({ ...postData,\n      flickr: e.target.value\n    }),\n    label: \"Flickr\",\n    defaultValue: socialMediaAccounts.flickr && socialMediaAccounts.flickr.account,\n    name: \"flickr\",\n    id: \"Flickr\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, \"Change your Password\"), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: postData.password,\n    onChange: e => setPostData({ ...postData,\n      password: e.target.value\n    }),\n    label: \"Password\",\n    error: passwordTag,\n    type: \"password\",\n    name: \"password\",\n    id: \"Password\",\n    className: classes.texfield,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }, passwordTag && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 69\n    }\n  }, \"Passwords don not match\"))), /*#__PURE__*/React.createElement(Box, {\n    m: 1,\n    mb: 3,\n    flexGrow: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Confirm your Password\",\n    error: passwordTag,\n    type: \"password\",\n    name: \"confirmPassword\",\n    id: \"confirmPassword\",\n    className: classes.texfield,\n    onChange: event => setConfirmPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, passwordTag && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 69\n    }\n  }, \"Password don not match\")))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"secondary\",\n    m: 1,\n    variant: \"outlined\",\n    fullWidth: \"true\",\n    onClick: handlePasswordOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    m: 1,\n    onClick: handleClose,\n    fullWidth: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, \"Discard\"))))));\n}","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/Dashboard/EditProfileForm.jsx"],"names":["React","useState","useContext","makeStyles","UserContext","Modal","Backdrop","Fade","Button","TextField","FormHelperText","Box","Typography","Divider","ApiContext","MoreHorizIcon","useStyles","theme","modal","margin","maxWidth","alignItems","justifyContent","outline","border","overflow","minHeight","paper","backgroundColor","palette","background","padding","spacing","texfield","width","EditProfileForm","user","api","username","email","webpage","socialMediaAccounts","data","postData","setPostData","facebook","instagram","twitter","snapchat","flickr","password","classes","confirmPassword","setConfirmPassword","passwordTag","setPasswordTag","open","setOpen","handleOpen","handleClose","handlePasswordOnSubmit","updateProfile","editFormData","FormData","document","getElementById","convertFD2JSON","formData","obj","key","keys","get","JSON","stringify","jsonData","console","log","tryProfile","then","response","timeout","e","target","value","account","color","event"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { UserContext } from \"../../context/UserContext\"\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { ApiContext } from '../../context/ApiContext';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        margin: \"auto\",\r\n        maxWidth: \"100vh\", \r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        outline: \"none\",\r\n        border: 0,\r\n        overflow: \"scroll\",\r\n        minHeight: \"20vh\" \r\n        },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: 0,\r\n        // boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    texfield: {\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function EditProfileForm() {\r\n    const user = useContext(UserContext)\r\n    const api = useContext(ApiContext)\r\n\r\n    const { username, email, webpage, socialMediaAccounts} = user.data\r\n    const [postData, setPostData] = useState({ \r\n        username: username,\r\n        email: email,\r\n        webpage: webpage,\r\n        facebook: socialMediaAccounts.facebook,\r\n        instagram: socialMediaAccounts.instagram,\r\n        twitter: socialMediaAccounts.twitter,  \r\n        snapchat: socialMediaAccounts.snapchat,\r\n        flickr: socialMediaAccounts.flickr,\r\n        password: '', \r\n    });\r\n    \r\n    const classes = useStyles();\r\n\r\n    // const [newPassword, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState()\r\n    const [passwordTag, setPasswordTag] = useState();\r\n    const [open, setOpen] = useState();\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function handlePasswordOnSubmit(){\r\n        confirmPassword !== postData.password ? setPasswordTag(\"error\") : updateProfile() \r\n    }\r\n    \r\n    const updateProfile = async () => {\r\n\r\n        let editFormData = new FormData(document.getElementById(\"form\"));\r\n        function convertFD2JSON(formData) {\r\n            let obj = {};\r\n            for (let key of formData.keys()) {\r\n                obj[key] = formData.get(key);\r\n            }\r\n            return JSON.stringify(obj);\r\n        }\r\n        let jsonData = convertFD2JSON(editFormData);\r\n        console.log(jsonData);\r\n\r\n\r\n        api.tryProfile(editFormData)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                handleClose()\r\n            })\r\n            \r\n    }\r\n// Nota Mirar el css de Modal\r\n    return (\r\n        <div>\r\n            <Button type=\"button\" onClick={handleOpen}>\r\n                <MoreHorizIcon/>\r\n      </Button>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 300,\r\n                }}\r\n            >\r\n                <Fade in={open} >\r\n                    <form id=\"form\">\r\n                    <div className={classes.paper} >\r\n                        <Typography variant=\"h6\" mt={1}>Edit Your Profile</Typography>\r\n                        <Divider/>\r\n                            <Box display=\"flex\" >\r\n                                <Box m={1} flexGrow={1} >\r\n                                <TextField\r\n                                value={postData.username}\r\n                                onChange={(e) => setPostData({ ...postData, username: e.target.value })}\r\n                                label=\"Username\" \r\n                                defaultValue={username}\r\n                                name=\"username\"\r\n                                id=\"Username\" \r\n                                className={classes.texfield}\r\n                                />\r\n                                </Box>\r\n                                <Box m={1} flexGrow={1}  >\r\n                                <TextField\r\n                                value={postData.email}\r\n                                onChange={(e) => setPostData({ ...postData, email: e.target.value })}\r\n                                label=\"Email\" \r\n                                defaultValue={email} \r\n                                name=\"email\"\r\n                                id=\"email\"\r\n                                className={classes.texfield}\r\n                                />\r\n                                </Box>\r\n                            </Box>            \r\n                        <Typography variant=\"h6\">Contact details</Typography>\r\n                        <Divider />\r\n                            <Box display=\"block\" >\r\n                            <Box m={1} >\r\n                                <TextField\r\n                                value={postData.webpage}\r\n                                onChange={(e) => setPostData({ ...postData, webpage: e.target.value })}\r\n                                label=\"Web Page\" \r\n                                defaultValue={webpage}\r\n                                name=\"webpage\"\r\n                                id=\"webPage\" \r\n                                className={classes.texfield}\r\n                                />\r\n                            </Box>\r\n                            <Box m={1} >\r\n                                <TextField\r\n                                value={postData.instagram}\r\n                                onChange={(e) => setPostData({ ...postData, instagram: e.target.value })}\r\n                                label=\"Instagram\" \r\n                                defaultValue={socialMediaAccounts.instagram && socialMediaAccounts.instagram.account} \r\n                                id=\"Instagram\"\r\n                                name=\"instagram\"\r\n                                className={classes.texfield}\r\n                                />\r\n                            </Box>\r\n                            <Box  m={1} >\r\n                                <TextField\r\n                                value={postData.facebook}\r\n                                onChange={(e) => setPostData({ ...postData, facebook: e.target.value })}\r\n                                label=\"Facebook\" \r\n                                name=\"facebook\"\r\n                                defaultValue={socialMediaAccounts.facebook && socialMediaAccounts.facebook.account } \r\n                                id=\"Facebook\" \r\n                                className={classes.texfield}\r\n                                />\r\n                            </Box>\r\n                            <Box  m={1} >\r\n                                <TextField\r\n                                value={postData.twitter}\r\n                                onChange={(e) => setPostData({ ...postData, twitter: e.target.value })}\r\n                                label=\"Twitter\" \r\n                                name=\"twitter\"\r\n                                defaultValue={socialMediaAccounts.twitter && socialMediaAccounts.twitter.account} \r\n                                id=\"Twitter\" \r\n                                className={classes.texfield}\r\n                                />\r\n                            </Box>\r\n                            <Box  m={1} >\r\n                                <TextField\r\n                                value={postData.snapchat}\r\n                                onChange={(e) => setPostData({ ...postData, snapchat: e.target.value })}\r\n                                label=\"Snapchat\" \r\n                                defaultValue={socialMediaAccounts.snapchat && socialMediaAccounts.snapchat.account}\r\n                                name=\"snapchat\" \r\n                                id=\"Snapchat\" \r\n                                className={classes.texfield}\r\n                                />\r\n                            </Box>\r\n                            <Box  m={1} >\r\n                                <TextField\r\n                                value={postData.flickr}\r\n                                onChange={(e) => setPostData({ ...postData, flickr: e.target.value })}\r\n                                label=\"Flickr\" \r\n                                defaultValue={socialMediaAccounts.flickr && socialMediaAccounts.flickr.account }\r\n                                name=\"flickr\"\r\n                                id=\"Flickr\" \r\n                                className={classes.texfield}\r\n                                />\r\n                            </Box>\r\n                        </Box> \r\n                    <Typography variant=\"h6\">Change your Password</Typography>\r\n                    <Divider />\r\n                            <Box display=\"flex\" >\r\n                                <Box m={1} flexGrow={1} >\r\n                                    <TextField\r\n                                        value={postData.password}\r\n                                        onChange={(e) => setPostData({ ...postData, password: e.target.value })}\r\n                                        label=\"Password\" \r\n                                        error={ passwordTag }\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"Password\"\r\n                                        className={classes.texfield}\r\n                                         />\r\n                                    <FormHelperText>{passwordTag && <p style={{ color: \"red\" }}>Passwords don not match</p>}</FormHelperText>\r\n                            </Box>\r\n                                <Box m={1} mb={3} flexGrow={1}>\r\n                                    <TextField\r\n                                        label=\"Confirm your Password\" \r\n                                        error={ passwordTag }\r\n                                        type=\"password\"\r\n                                        name=\"confirmPassword\"\r\n                                        id=\"confirmPassword\"\r\n                                        className={classes.texfield}\r\n                                        onChange={(event) => setConfirmPassword(event.target.value)} />\r\n                                    <FormHelperText>{passwordTag && <p style={{color: \"red\"}}>Password don not match</p>}</FormHelperText>\r\n                            </Box>\r\n                        </Box>\r\n                        <Button type=\"submit\" color=\"secondary\" m={1} variant=\"outlined\" fullWidth=\"true\" onClick={handlePasswordOnSubmit}>Submit</Button>\r\n                        <Button color=\"inherit\" m={1} onClick={handleClose} fullWidth=\"true\">Discard</Button>\r\n\r\n                        </div>\r\n                    </form>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}