{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\ProtectedRoute.js\";\n// import { logDOM } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authentication from \"./auth\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // passed compontent as props\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // const authentication = async () => {\n  //     Axios.get(\"http://localhost:3000/api/isAuth\", { withCredentials: true })\n  //         .then(response => {\n  //             if (response.data === true) {\n  //                 setIsAuthenticated(response.data)\n  //             }//this.authenticated = response.data\n  //         })\n  //   }\n  // authentication()\n\n  useEffect(() => {\n    setIsAuthenticated(authentication());\n  }, []);\n  return /*#__PURE__*/React.createElement(Route // passed the rest of the props to the route\n  , Object.assign({}, rest, {\n    render: props => {\n      if (isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 28\n          }\n        }));\n      }\n\n      if (!isAuthenticated) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/ProtectedRoute.js"],"names":["React","useState","useEffect","Route","Redirect","authentication","ProtectedRoute","component","Component","rest","isAuthenticated","setIsAuthenticated","props","pathname","state","from","location"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,QAA3B;;AAIA,MAAOC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC3D;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD,CAH2D,CAK3D;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,kBAAkB,CAACN,cAAc,EAAf,CAAlB;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI,oBAAC,KAAD,CACI;AADJ,sBAEQI,IAFR;AAGI,IAAA,MAAM,EAAEG,KAAK,IAAI;AACb,UAAIF,eAAJ,EAAqB;AACjB,4BAAO,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH;;AAAC,UAAI,CAACF,eAAL,EAAsB;AACpB,4BACI,oBAAC,QAAD;AACI,UAAA,EAAE,EAAE;AACAG,YAAAA,QAAQ,EAAE,GADV;AAEAC,YAAAA,KAAK,EAAE;AACHC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADT;AAFP,WADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;AACJ,KAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAsBH,CA1CD;;AA4CA,eAAeV,cAAf","sourcesContent":["// import { logDOM } from \"@testing-library/react\";\r\nimport React, {useState, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authentication from \"./auth\"\r\n\r\n\r\n\r\nconst  ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    // passed compontent as props\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\r\n    // const authentication = async () => {\r\n    //     Axios.get(\"http://localhost:3000/api/isAuth\", { withCredentials: true })\r\n\r\n    //         .then(response => {\r\n    //             if (response.data === true) {\r\n    //                 setIsAuthenticated(response.data)\r\n    //             }//this.authenticated = response.data\r\n    //         })\r\n    //   }\r\n    // authentication()\r\n\r\n    useEffect(() => {\r\n        setIsAuthenticated(authentication())\r\n    },[])\r\n\r\n    return (\r\n        <Route\r\n            // passed the rest of the props to the route\r\n            {...rest}\r\n            render={props => {\r\n                if (isAuthenticated) {\r\n                    return <Component {...props} />;\r\n                } if (!isAuthenticated) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    from: props.location\r\n                                }\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}