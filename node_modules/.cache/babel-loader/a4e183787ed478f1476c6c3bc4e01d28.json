{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\Dashboard\\\\UserAvatar.jsx\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles(theme => ({\n  root: {// backgroundImage: 'url(\"../../public/avatar-default.png\")'\n  },\n  avatarHover: {\n    backgroundColor: \"rgba(0, 0, 0, 0.2);\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolut\",\n    zIndex: 1\n  }\n}));\nexport default function UserAvatar(props) {\n  const [isShown, setIsShown] = useState(false);\n  const classes = useStyles();\n  const [profileAvatar, setProfileAvatar] = useState();\n  const {\n    username,\n    _id\n  } = props.user;\n\n  const handleAvatarUpload = async e => {\n    e.preventDefault();\n    const avatarFormData = new FormData(document.getElementById(\"uploadAvatarImage\")); // formData.append(date, username)\n\n    for (const p of avatarFormData) {\n      console.log(\"Avatar log\", p);\n    }\n\n    await Axios({\n      method: \"POST\",\n      url: `http://localhost:3000/api/upload-avatar/${_id}`,\n      withCredentials: \"same-origin\",\n      data: avatarFormData,\n      headers: {\n        \"Accept\": \"multipart/form-data\",\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(function (response) {\n      console.log(response.data);\n    });\n  };\n\n  Axios.get(`http://localhost:3000/api/get-images/image/${_id}`).then(function (response) {\n    console.log(response.data);\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    id: \"uploadAvatarImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar // className={classes.root}\n  , {\n    variant: \"rounded\",\n    onMouseEnter: () => setIsShown(true),\n    onMouseLeave: () => setIsShown(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-avatar-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    in: isShown // onChange={handleAvatarUpload}\n    ,\n    className: classes.avatarHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"upload-avatar-button\",\n    name: \"uploadAvatar\",\n    style: {\n      display: \"none\"\n    },\n    onChange: handleAvatarUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/Dashboard/UserAvatar.jsx"],"names":["React","useState","makeStyles","Axios","Avatar","AddIcon","Fade","useStyles","theme","root","avatarHover","backgroundColor","display","width","height","alignItems","justifyContent","position","zIndex","UserAvatar","props","isShown","setIsShown","classes","profileAvatar","setProfileAvatar","username","_id","user","handleAvatarUpload","e","preventDefault","avatarFormData","FormData","document","getElementById","p","console","log","method","url","withCredentials","data","headers","then","response","get"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Axios from \"axios\"\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // backgroundImage: 'url(\"../../public/avatar-default.png\")'\r\n    },\r\n    avatarHover: {\r\n        backgroundColor: \"rgba(0, 0, 0, 0.2);\",\r\n        display: \"flex\",\r\n        width:\"100%\",\r\n        height: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        position: \"absolut\",\r\n        zIndex: 1\r\n    },\r\n\r\n\r\n}));\r\n\r\nexport default function UserAvatar(props) {\r\n    const [isShown, setIsShown] = useState(false);\r\n    const classes = useStyles();\r\n    const [profileAvatar, setProfileAvatar] = useState()\r\n    const {username, _id} = props.user\r\n\r\n    const handleAvatarUpload = async e => {\r\n        e.preventDefault();\r\n        const avatarFormData = new FormData(document.getElementById(\"uploadAvatarImage\"));\r\n\r\n        // formData.append(date, username)\r\n        for (const p of avatarFormData) {\r\n            console.log(\"Avatar log\", p);\r\n        }\r\n                await Axios({\r\n                    method: \"POST\",\r\n                    url: `http://localhost:3000/api/upload-avatar/${_id}`,\r\n                    withCredentials: \"same-origin\",\r\n                    data: avatarFormData,\r\n                    headers: {\r\n                        \"Accept\": \"multipart/form-data\",\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                    },\r\n                })\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    })\r\n    }\r\n \r\n    Axios.get(`http://localhost:3000/api/get-images/image/${_id}`)\r\n    .then(function (response) {\r\n              console.log(response.data);\r\n          })\r\n\r\n\r\n\r\n\r\n    return (\r\n    <form id=\"uploadAvatarImage\">   \r\n        {/* <img src=\"avatar.default.png\" alt=\"Avatar\" class=\"avatar\"/> */}\r\n            <Avatar \r\n            // className={classes.root}\r\n            variant=\"rounded\"\r\n            onMouseEnter={() => setIsShown(true)}\r\n            onMouseLeave={() => setIsShown(false)}\r\n            >       \r\n            <label htmlFor=\"upload-avatar-button\">\r\n                <Fade in={isShown} \r\n                // onChange={handleAvatarUpload}\r\n                className={classes.avatarHover}\r\n                >\r\n                    <AddIcon />\r\n                </Fade>\r\n            </label>\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"upload-avatar-button\"\r\n                    name=\"uploadAvatar\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={handleAvatarUpload}\r\n                />\r\n\r\n            </Avatar>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}