{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\ProtectedRoute.js\";\n// import { logDOM } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // import authentication from \"./auth\"\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const routeAction = props => {\n    if (rest.user.auth) {\n      // console.log(\"user object \" + rest.user.user.username);\n      return /*#__PURE__*/React.createElement(Component, Object.assign({\n        user: rest\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }\n      }));\n    }\n\n    if (!rest.user.auth) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/\",\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Route // passed the rest of the props to the route\n  , Object.assign({}, rest, {\n    render: routeAction(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","routeAction","props","user","auth","pathname","state","from","location"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;AAEA,MAAOC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAE7D,QAAMC,WAAW,GAAGC,KAAK,IAAI;AACvB,QAAIF,IAAI,CAACG,IAAL,CAAUC,IAAd,EAAoB;AAChB;AACA,0BAAO,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEJ;AAAjB,SAA2BE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAAC,QAAI,CAACF,IAAI,CAACG,IAAL,CAAUC,IAAf,EAAqB;AACnB,0BACI,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAC,UAAAA,QAAQ,EAAE,GADV;AAEAC,UAAAA,KAAK,EAAE;AACHC,YAAAA,IAAI,EAAEL,KAAK,CAACM;AADT;AAFP,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH;AACJ,GAhBH;;AAkBE,sBAEQ,oBAAC,KAAD,CACI;AADJ,sBAEQR,IAFR;AAGI,IAAA,MAAM,EAAEC,WAAW,EAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFR;AAQC,CA5BL;;AA8BI,eAAeJ,cAAf","sourcesContent":["// import { logDOM } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import authentication from \"./auth\"\r\n\r\nconst  ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n  const routeAction = props => {\r\n        if (rest.user.auth) {\r\n            // console.log(\"user object \" + rest.user.user.username);\r\n            return <Component user={rest} {...props} />;\r\n        } if (!rest.user.auth) {\r\n            return (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/\",\r\n                        state: {\r\n                            from: props.location\r\n                        }\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n            <Route\r\n                // passed the rest of the props to the route\r\n                {...rest}\r\n                render={routeAction()}\r\n            />\r\n        );\r\n    };\r\n    \r\n    export default ProtectedRoute"]},"metadata":{},"sourceType":"module"}