{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\Dashboard\\\\createPost\\\\CreatePostForm.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { ApiContext } from \"../../../context/ApiContext\";\nimport { UserContext } from \"../../../context/UserContext\";\nimport _ from \"lodash\";\nimport { InputLabel, InputAdornment, Input, Button, Grid, Link, makeStyles } from '@material-ui/core';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport LabelIcon from '@material-ui/icons/Label';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nconst useStyles = makeStyles(() => ({\n  inputLabel: {\n    fontSize: 13\n  },\n  iconButton: {\n    maxWidth: \"2vh\",\n    height: \"1vh\"\n  },\n  clearIcon: {\n    maxWidth: \"2vh\"\n  },\n  paper: {\n    maxWidth: \"fit-content\",\n    paddingLeft: \"1vh\"\n  },\n  tagsDisplay: {\n    display: \"flex\"\n  }\n}));\nexport default function CreatePostForm(props) {\n  const [tags, setTags] = useState([]);\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [price, setPrice] = useState();\n  const user = useContext(UserContext);\n  const api = useContext(ApiContext);\n  const {\n    username,\n    _id\n  } = user.data;\n\n  const date = () => {\n    const day = new Date().getDate();\n    const month = new Date().getMonth() + 1;\n    const year = new Date().getFullYear();\n    return day + \"-\" + month + \"-\" + year;\n  };\n\n  const handleUpload = () => {\n    const prueba = {\n      prueba: \"prueba\",\n      test: {\n        test: \"test\",\n        numero: \"numero\"\n      }\n    };\n    props.images.forEach(image => {\n      const fd = new FormData(); // fd.append(\"creatorId\", _id)\n      // fd.append(\"prueba\", prueba)\n      // fd.append(\"createdAt\", date())\n      // fd.append(\"price\", price)\n      // fd.append(\"tags\", tags)\n\n      const post = {\n        creator: username,\n        creatorId: _id,\n        prueba: prueba,\n        image: Array.from(fd),\n        createdAt: date(),\n        price: price,\n        tags: tags\n      };\n      fd.append(\"post\", post);\n      console.log(post);\n      api.createPost(Array.from(fd));\n    });\n  };\n\n  const handleKeyDown = e => {\n    const filterTags = tags.filter(tag => tag === inputValue);\n\n    if (filterTags.length > 0) {\n      setInputValue(\"\");\n    } else if (inputValue < 1) {\n      setInputValue(\"\");\n    } else if (e.key === 'Enter') {\n      setTags(prevTags => prevTags.concat(_.lowerCase(inputValue)));\n      setInputValue(\"\");\n    }\n  };\n\n  const handleTags = () => {\n    const filterTags = tags.filter(tag => tag === inputValue);\n\n    if (filterTags.length > 0) {\n      setInputValue(\"\");\n    } else if (inputValue < 1) {\n      setInputValue(\"\");\n    } else {\n      setTags(prevTags => prevTags.concat(_.lowerCase(inputValue)));\n      setInputValue(\"\");\n    }\n  };\n\n  const tagsArray = tags.map(tag => {\n    return /*#__PURE__*/React.createElement(Link, {\n      href: tag,\n      key: tags.indexOf(tag),\n      onClick: e => e.preventDefault(),\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \" #\" + tag, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"delete\",\n      onClick: () => {\n        tags.splice(tags.indexOf(tag), 1);\n        setTags([...tags]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ClearIcon, {\n      className: classes.clearIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Choose a price\"), /*#__PURE__*/React.createElement(Input, {\n    id: \"Price\",\n    fullWidth: true,\n    required: true,\n    placeholder: \"5$\",\n    type: \"number\",\n    onChange: e => setPrice(e.target.value),\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 38\n      }\n    }, \" \", /*#__PURE__*/React.createElement(MonetizationOnIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 72\n      }\n    }), \" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Tags\"), /*#__PURE__*/React.createElement(Input, {\n    fullWidth: true,\n    id: \"Tags\",\n    value: inputValue,\n    placeholder: \"Red dress...\",\n    onChange: e => setInputValue(e.target.value),\n    onKeyDown: handleKeyDown,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 38\n      }\n    }, \" \", /*#__PURE__*/React.createElement(LabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 72\n      }\n    }), \" \"),\n    endAdornment: /*#__PURE__*/React.createElement(Button, {\n      onClick: handleTags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 36\n      }\n    }, \" ADD \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.tagsDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, tagsArray && tagsArray), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"default\",\n    fullWidth: true,\n    startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 32\n      }\n    }),\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Upload\")));\n}","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/Dashboard/createPost/CreatePostForm.jsx"],"names":["React","useState","useContext","ApiContext","UserContext","_","InputLabel","InputAdornment","Input","Button","Grid","Link","makeStyles","MonetizationOnIcon","CloudUploadIcon","LabelIcon","IconButton","ClearIcon","useStyles","inputLabel","fontSize","iconButton","maxWidth","height","clearIcon","paper","paddingLeft","tagsDisplay","display","CreatePostForm","props","tags","setTags","classes","inputValue","setInputValue","price","setPrice","user","api","username","_id","data","date","day","Date","getDate","month","getMonth","year","getFullYear","handleUpload","prueba","test","numero","images","forEach","image","fd","FormData","post","creator","creatorId","Array","from","createdAt","append","console","log","createPost","handleKeyDown","e","filterTags","filter","tag","length","key","prevTags","concat","lowerCase","handleTags","tagsArray","map","indexOf","preventDefault","splice","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { ApiContext } from \"../../../context/ApiContext\";\r\nimport { UserContext } from \"../../../context/UserContext\";\r\nimport _ from \"lodash\"\r\n\r\nimport { InputLabel, InputAdornment, Input, Button, Grid, Link,  makeStyles } from '@material-ui/core';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    inputLabel: {\r\n        fontSize: 13 \r\n    },\r\n    iconButton: {\r\n        maxWidth: \"2vh\",\r\n        height: \"1vh\"\r\n    },\r\n    clearIcon: {\r\n        maxWidth: \"2vh\"\r\n    },\r\n    paper: {\r\n        maxWidth: \"fit-content\",\r\n        paddingLeft: \"1vh\"\r\n    },\r\n    tagsDisplay: {\r\n        display: \"flex\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function CreatePostForm(props) {\r\n    const [tags, setTags] = useState([]);\r\n    const classes = useStyles();\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [price, setPrice] = useState();\r\n    const user = useContext(UserContext)\r\n    const api = useContext(ApiContext)\r\n    const { username, _id } = user.data\r\n\r\n    const date = () => {\r\n\r\n        const day = new Date().getDate()\r\n        const month = new Date().getMonth() + 1\r\n        const year = new Date().getFullYear()\r\n        return day + \"-\" + month + \"-\" + year\r\n    }\r\n    \r\n    const handleUpload = () => {\r\n        \r\n        const prueba = {prueba: \"prueba\", test: {\r\n            test: \"test\",\r\n            numero: \"numero\"\r\n        }}\r\n        props.images.forEach(image => {\r\n            const fd = new FormData()\r\n            // fd.append(\"creatorId\", _id)\r\n            // fd.append(\"prueba\", prueba)\r\n            // fd.append(\"createdAt\", date())\r\n            // fd.append(\"price\", price)\r\n            // fd.append(\"tags\", tags)\r\n            const post = {\r\n                creator: username,\r\n                creatorId: _id,\r\n                prueba: prueba,\r\n                image: Array.from(fd),\r\n                createdAt: date(),\r\n                price: price,\r\n                tags: tags\r\n            }\r\n            fd.append(\"post\", post)\r\n\r\n            console.log(post);\r\n            api.createPost(Array.from(fd))\r\n        });\r\n    }\r\n    \r\n    const handleKeyDown = (e) => {\r\n        const filterTags = tags.filter(tag => tag === inputValue)\r\n\r\n        if (filterTags.length > 0) {\r\n            setInputValue(\"\");\r\n        } else if (inputValue < 1) {\r\n            setInputValue(\"\")\r\n        } else if (e.key === 'Enter') {\r\n            setTags(prevTags => prevTags.concat(_.lowerCase(inputValue)))\r\n            setInputValue(\"\")\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const handleTags = () => {\r\n        const filterTags = tags.filter(tag => tag === inputValue)\r\n        \r\n        if (filterTags.length > 0) {\r\n            setInputValue(\"\");\r\n        } else if (inputValue < 1){\r\n            setInputValue(\"\")\r\n        } else {\r\n            setTags(prevTags => prevTags.concat(_.lowerCase(inputValue)))\r\n            setInputValue(\"\")\r\n        }\r\n    }\r\n\r\n    \r\n    const tagsArray = tags.map(tag => {\r\n        return (\r\n            <Link href={tag} key={tags.indexOf(tag)} onClick={(e) => e.preventDefault()} variant=\"body2\">\r\n                {\" #\" + tag}\r\n                <IconButton className={classes.iconButton} aria-label=\"delete\" onClick={() => { tags.splice(tags.indexOf(tag), 1); setTags([...tags]);}} >\r\n                    <ClearIcon className={classes.clearIcon}/>\r\n                </IconButton>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <form>\r\n            <Grid item >\r\n                <InputLabel className={classes.inputLabel}>Choose a price</InputLabel>\r\n                <Input\r\n                    id=\"Price\"\r\n                    fullWidth\r\n                    required\r\n                    placeholder=\"5$\"\r\n                    type=\"number\"\r\n                    onChange={(e) => setPrice( e.target.value )}\r\n                    startAdornment={ <InputAdornment position=\"start\"> <MonetizationOnIcon /> </InputAdornment> }\r\n                />\r\n            </Grid>\r\n            <br />\r\n            <Grid item>\r\n                <InputLabel className={classes.inputLabel}>Tags</InputLabel>\r\n                <Input\r\n                    fullWidth\r\n                    id=\"Tags\"\r\n                    value={inputValue}\r\n                    placeholder=\"Red dress...\"\r\n                    onChange={(e) => setInputValue(e.target.value)}\r\n                    onKeyDown={handleKeyDown}\r\n                    startAdornment={ <InputAdornment position=\"start\"> <LabelIcon /> </InputAdornment> }\r\n                    endAdornment={ <Button onClick={handleTags} > ADD </Button> }\r\n                />\r\n            </Grid>\r\n            <br />\r\n            <Grid item className={classes.tagsDisplay} >\r\n                    {tagsArray && tagsArray}\r\n            </Grid>\r\n            <br />\r\n            <Grid item>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    fullWidth\r\n                    startIcon={<CloudUploadIcon />}\r\n                    onClick={handleUpload}\r\n                >\r\n                    Upload\r\n                </Button>\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}