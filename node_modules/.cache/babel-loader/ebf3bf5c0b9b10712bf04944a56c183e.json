{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\ProtectedRoute.js\";\n// import { logDOM } from \"@testing-library/react\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\"; // import authentication from \"./auth\"\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const PrivateRoute = ({\n    component: Component,\n    ...rest\n  }) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => rest.user.auth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(PrivateRoute, {\n    component: Component,\n    user: props.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ProtectedRoute; // <Route\n//     // passed the rest of the props to the route\n//     {...rest}\n//     render={props => {\n//         if (rest.user.auth) {\n// // console.log(\"user object \" + rest.user.user.username);\n//             return <Component  {{rest: rest.user, ...props}}/>;\n//         } if (!rest.user.auth) {\n//             return (\n//                 <Redirect\n//                     to={{\n//                         pathname: \"/\",\n//                         state: {\n//                             from: props.location\n//                         }\n//                     }}\n//                 />\n//             );\n//         }\n//     }}\n// />","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","ProtectedRoute","component","Component","rest","PrivateRoute","props","user","auth","pathname","state","from","location"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;AAEA,MAAOC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAE3D,QAAOC,YAAY,GAAG,CAAC;AAAEH,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAD,kBAClB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGE,KAAD,IACrBF,IAAI,CAACG,IAAL,CAAUC,IAAV,gBACM,oBAAC,SAAD,oBAAeF,KAAf,EAA0BF,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADN,gBAEM,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACZK,QAAAA,QAAQ,EAAE,GADE;AAEZC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAEL,KAAK,CAACM;AADT;AAFK,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AAaA,sBAEI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAET,SADf;AAEI,IAAA,IAAI,EAAEG,KAAK,CAACC,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAOC,CAtBL;;AAwBI,eAAeN,cAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { logDOM } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import authentication from \"./auth\"\r\n\r\nconst  ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const  PrivateRoute = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n            rest.user.auth\r\n                ? <Component {...props} {...rest} />\r\n                : <Redirect to={{\r\n                    pathname: \"/\",\r\n                    state: {\r\n                        from: props.location\r\n                    }\r\n                }} />\r\n        )} />\r\n    );\r\n\r\n    return (\r\n\r\n        <PrivateRoute\r\n            component={Component}\r\n            user={props.user}\r\n        />\r\n        );\r\n    };\r\n    \r\n    export default ProtectedRoute\r\n    // <Route\r\n    //     // passed the rest of the props to the route\r\n    //     {...rest}\r\n    //     render={props => {\r\n    //         if (rest.user.auth) {\r\n    // // console.log(\"user object \" + rest.user.user.username);\r\n    //             return <Component  {{rest: rest.user, ...props}}/>;\r\n    //         } if (!rest.user.auth) {\r\n    //             return (\r\n    //                 <Redirect\r\n    //                     to={{\r\n    //                         pathname: \"/\",\r\n    //                         state: {\r\n    //                             from: props.location\r\n    //                         }\r\n    //                     }}\r\n    //                 />\r\n    //             );\r\n    //         }\r\n    //     }}\r\n    // />"]},"metadata":{},"sourceType":"module"}