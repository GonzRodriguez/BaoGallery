{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gon_w\\\\Desktop\\\\Coding\\\\BaoGallery\\\\src\\\\components\\\\Dashboard\\\\createPost\\\\CreatePost.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles, Card, Fab, CardMedia, CardContent, Box, Grid, Container } from '@material-ui/core';\nimport CreatePostForm from \"./CreatePostForm\";\nimport DeletePostButton from \"./DeletePostButton\";\nimport Dropzone from 'react-dropzone';\nconst useStyles = makeStyles((theme, buttonHover, previewImages) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    borderRadius: \"0\"\n  },\n  image: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"fit-content\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  },\n  uploadForm: {\n    margin: \"2% auto\"\n  },\n  input: {\n    margin: 0\n  }\n}));\nexport default function CreatePost() {\n  const [previewImages, setPreviewImages] = useState([]);\n  const classes = useStyles(previewImages);\n  const [images, setImages] = useState([]);\n\n  const handleChange = acceptedFiles => {\n    setImages(prevImages => prevImages.concat(acceptedFiles));\n    images.forEach(file => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = () => {\n        if (reader.readyState === 2) {\n          console.log(file);\n          setPreviewImages(prevImages => prevImages.concat(reader.result));\n        }\n      };\n    });\n  };\n\n  useEffect(() => {});\n  const cardCustom = Array.from(previewImages).map(image => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: previewImages.indexOf(image),\n      className: classes.image,\n      item: true,\n      xs: 12,\n      sm: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      component: \"img\",\n      alt: \"image\",\n      height: \"140vh\",\n      image: image.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DeletePostButton, {\n      images: images,\n      setImages: setImages,\n      previewImages: previewImages,\n      setPreviewImages: setPreviewImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: acceptedFiles => {\n      handleChange(acceptedFiles);\n      console.log(acceptedFiles);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\")))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, cardCustom), images.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    md: 5,\n    className: classes.uploadForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CreatePostForm, {\n    images: images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    m: 2,\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-image-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"secondary\",\n    \"aria-label\": \"add\",\n    component: \"span\",\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"upload-image-button\",\n    name: \"uploadImage\",\n    multiple: true,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/gon_w/Desktop/Coding/BaoGallery/src/components/Dashboard/createPost/CreatePost.jsx"],"names":["React","useState","useEffect","AddIcon","makeStyles","Card","Fab","CardMedia","CardContent","Box","Grid","Container","CreatePostForm","DeletePostButton","Dropzone","useStyles","theme","buttonHover","previewImages","root","display","alignItems","borderRadius","image","position","height","margin","spacing","uploadForm","input","CreatePost","setPreviewImages","classes","images","setImages","handleChange","acceptedFiles","prevImages","concat","forEach","file","reader","FileReader","readAsDataURL","onloadend","readyState","console","log","result","cardCustom","Array","from","map","indexOf","getRootProps","getInputProps","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,SAAhC,EAA2CC,WAA3C,EAAwDC,GAAxD,EAA6DC,IAA7D,EAAmEC,SAAnE,QAAoF,mBAApF;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAGA,MAAMC,SAAS,GAAGX,UAAU,CAAC,CAACY,KAAD,EAAQC,WAAR,EAAqBC,aAArB,MAAyC;AAClEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,YAAY,EAAE;AAHV,GAD4D;AAMlEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELJ,IAAAA,OAAO,EAAE,MAFJ;AAGLK,IAAAA,MAAM,EAAE;AAHH,GAN2D;AAWlEC,EAAAA,MAAM,EAAE;AACRA,IAAAA,MAAM,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AADA,GAX0D;AAclEC,EAAAA,UAAU,EAAE;AACVF,IAAAA,MAAM,EAAE;AADE,GAdsD;AAiBlEG,EAAAA,KAAK,EAAE;AACLH,IAAAA,MAAM,EAAE;AADH;AAjB2D,CAAzC,CAAD,CAA5B;AAsBA,eAAe,SAASI,UAAT,GAAsB;AACnC,QAAM,CAACZ,aAAD,EAAgBa,gBAAhB,IAAoC9B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM+B,OAAO,GAAGjB,SAAS,CAACG,aAAD,CAAzB;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMkC,YAAY,GAAIC,aAAD,IAAmB;AAEpCF,IAAAA,SAAS,CAACG,UAAU,IAAIA,UAAU,CAACC,MAAX,CAAkBF,aAAlB,CAAf,CAAT;AACEH,IAAAA,MAAM,CAACM,OAAP,CAAeC,IAAI,IAAI;AACrB,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBH,IAArB;;AACAC,MAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACvB,YAAIH,MAAM,CAACI,UAAP,KAAsB,CAA1B,EAA6B;AAC3BC,UAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAT,UAAAA,gBAAgB,CAACM,UAAU,IAAIA,UAAU,CAACC,MAAX,CAAkBG,MAAM,CAACO,MAAzB,CAAf,CAAhB;AACD;AACF,OALD;AAMD,KATD;AAWH,GAdH;;AAgBA9C,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,CAAT;AAGA,QAAM+C,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWjC,aAAX,EAA0BkC,GAA1B,CAA8B7B,KAAK,IAAI;AACxD,wBAEE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEL,aAAa,CAACmC,OAAd,CAAsB9B,KAAtB,CAAX;AAAyC,MAAA,SAAS,EAAES,OAAO,CAACT,KAA5D;AAAmE,MAAA,IAAI,MAAvE;AAAwE,MAAA,EAAE,EAAE,EAA5E;AAAgF,MAAA,EAAE,EAAE,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,GAAG,EAAC,OAFN;AAGE,MAAA,MAAM,EAAC,OAHT;AAIE,MAAA,KAAK,EAAEA,KAAK,CAACA,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEU,MAA1B;AAAkC,MAAA,SAAS,EAAEC,SAA7C;AAAwD,MAAA,aAAa,EAAEhB,aAAvE;AAAsF,MAAA,gBAAgB,EAAEa,gBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFF;AAYD,GAbkB,CAAnB;AAiBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEK,aAAa,IAAI;AAAED,MAAAA,YAAY,CAACC,aAAD,CAAZ;AAA8BU,MAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AAA4B,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEkB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,CADF,CAFJ,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,UADH,CAXF,EAcOhB,MAAM,CAACuB,MAAP,GAAgB,CAAhB,iBACL,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,SAAS,EAAExB,OAAO,CAACJ,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEK,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CAfF,eA0BE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,UAAnC;AAA8C,IAAA,CAAC,EAAE,CAAjD;AAAoD,IAAA,CAAC,EAAE,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,WAAX;AAAuB,kBAAW,KAAlC;AAAwC,IAAA,SAAS,EAAC,MAAlD;AAAyD,IAAA,SAAS,EAAED,OAAO,CAACN,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADJ,CA1BF,eAiCE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,qBAFL;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAO,EAAE;AAAX,KALT;AAME,IAAA,QAAQ,EAAEe,YANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,CADF;AA4CD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { makeStyles, Card, Fab, CardMedia, CardContent, Box, Grid, Container } from '@material-ui/core';\r\nimport CreatePostForm from \"./CreatePostForm\"\r\nimport DeletePostButton from \"./DeletePostButton\"\r\nimport Dropzone from 'react-dropzone'\r\n\r\n\r\nconst useStyles = makeStyles((theme, buttonHover, previewImages ) => ({\r\n    root: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderRadius: \"0\"\r\n    },\r\n    image: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      height: \"fit-content\"\r\n    },\r\n    margin: {\r\n    margin: theme.spacing(1),\r\n    },\r\n    uploadForm: {\r\n      margin: \"2% auto\"\r\n    },\r\n    input: {\r\n      margin: 0,\r\n    }\r\n}));\r\n\r\nexport default function CreatePost() {\r\n  const [previewImages, setPreviewImages] = useState([]);\r\n  const classes = useStyles(previewImages);\r\n  const [images, setImages] = useState([])\r\n  \r\n  const handleChange = (acceptedFiles) => {\r\n\r\n      setImages(prevImages => prevImages.concat(acceptedFiles));\r\n        images.forEach(file => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file)\r\n          reader.onloadend = () => {\r\n            if (reader.readyState === 2) {\r\n              console.log(file);\r\n              setPreviewImages(prevImages => prevImages.concat(reader.result))\r\n            }\r\n          }\r\n        })\r\n\r\n    }\r\n  \r\n  useEffect(() => {\r\n  })\r\n\r\n  const cardCustom = Array.from(previewImages).map(image => {\r\n    return (\r\n          \r\n      <Grid key={previewImages.indexOf(image)} className={classes.image} item xs={12} sm={3}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"image\"\r\n          height=\"140vh\"\r\n          image={image.image}\r\n        />\r\n        <DeletePostButton images={images} setImages={setImages} previewImages={previewImages} setPreviewImages={setPreviewImages}/>\r\n        </Grid>\r\n    )\r\n  })\r\n\r\n\r\n \r\n  return (\r\n    <Container >\r\n      <Dropzone onDrop={acceptedFiles => { handleChange(acceptedFiles);  console.log(acceptedFiles) }}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <p>Drag 'n' drop some files here, or click to select files</p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        {cardCustom}\r\n      </Grid>\r\n          {images.length > 0 && \r\n      <Grid  >\r\n        <Grid item xs={12} sm={7} md={5} className={classes.uploadForm}>\r\n          <Card >\r\n            <CardContent>\r\n              <CreatePostForm images={images}/>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        </Grid>\r\n        }\r\n\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" m={2} p={1}>\r\n          <label htmlFor=\"upload-image-button\"> \r\n            <Fab color=\"secondary\" aria-label=\"add\" component=\"span\" className={classes.margin}>\r\n              <AddIcon />\r\n            </Fab>      \r\n          </label>\r\n      </Box>\r\n      <input\r\n        type=\"file\"\r\n        id=\"upload-image-button\"\r\n        name=\"uploadImage\"\r\n        multiple\r\n        style={{ display: \"none\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </Container>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}